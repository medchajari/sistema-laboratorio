
package vistas;

import Entidades.ObraSocial;
import Entidades.Paciente;
import Entidades.tipoProtocolo;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import Entidades.Protocolo;
import Entidades.tipoProtocolo;
import Metodos.TipoProtocoloData;
import Metodos.obrasocialData;
import Metodos.pacienteData;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
/**
 *
 * @author MeD
 */
public class Protocolo_por_tipo extends javax.swing.JFrame {
 private pacienteData pacienteData;
   private TipoProtocoloData tiproData;
    private obrasocialData obData;
   
    public Protocolo_por_tipo() {
        initComponents();
        tiproData = new TipoProtocoloData();
         obData = new obrasocialData();
         pacienteData = new pacienteData();
         
 

        llenarComboBoxtip();
        
  DefaultTableModel model = new DefaultTableModel();
    model.addColumn("ID");
    model.addColumn("Paciente");
    model.addColumn("Protocolo");
    model.addColumn("Fecha Solicitud");
    model.addColumn("Fecha Entrega");
    model.addColumn("Monto");
    model.addColumn("Estado");

    // Asignar el modelo a la tabla existente (tableInformes)
    tableInformes.setModel(model);

    // Ajustar el ancho de las columnas en tableInformes
    TableColumnModel columnModel = tableInformes.getColumnModel();
    columnModel.getColumn(0).setPreferredWidth(40);  // ID
    columnModel.getColumn(1).setPreferredWidth(190); // Paciente
    columnModel.getColumn(2).setPreferredWidth(100); // Protocolo
    columnModel.getColumn(3).setPreferredWidth(100); // Fecha Solicitud
    columnModel.getColumn(4).setPreferredWidth(100); // Fecha Entrega
    columnModel.getColumn(5).setPreferredWidth(80);  // Monto
    columnModel.getColumn(6).setPreferredWidth(100); // Estado
    
    btnBuscar.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnBuscarActionPerformed(evt);
        }
    });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableInformes = new javax.swing.JTable();
        cbxTipo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        dcDesde = new com.toedter.calendar.JDateChooser();
        dcHasta = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        txtSuma = new javax.swing.JTextField();
        btnSalir = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableInformes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableInformes);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 226, 786, 253));

        jPanel1.add(cbxTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 158, 210, 44));

        jLabel2.setText("Tipo de Protocolo");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 142, -1, -1));
        jPanel1.add(dcDesde, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 160, 189, 44));

        dcHasta.setMinimumSize(new java.awt.Dimension(85, 22));
        jPanel1.add(dcHasta, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 160, 189, 44));

        jLabel3.setText("Desde");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 142, -1, -1));

        jLabel4.setText("Hasta");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 138, -1, -1));

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos-chicos/lupa (1).png"))); // NOI18N
        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(651, 160, 141, 44));

        txtSuma.setBorder(null);
        jPanel1.add(txtSuma, new org.netbeans.lib.awtextra.AbsoluteConstraints(622, 502, 162, -1));

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos-azules/30/adelante.png"))); // NOI18N
        btnSalir.setText("  SALIR");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 497, 149, 34));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 153, 255));
        jLabel5.setText("Buscar Protocolos por tipo");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 50, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondos/marquesina-1_B.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 812, 116));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
      try {
        // Obtener las fechas desde los DateChooser
        Date fechaDesde = dcDesde.getDate();
        Date fechaHasta = dcHasta.getDate();

        // Validar que las fechas no sean nulas
        if (fechaDesde == null || fechaHasta == null) {
            JOptionPane.showMessageDialog(this, "Por favor seleccione las fechas", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Variables para almacenar los resultados
        List<Protocolo> protocolos = new ArrayList<>();

        // Obtener el tipo de protocolo seleccionado
        tipoProtocolo tipoSeleccionado = (tipoProtocolo) cbxTipo.getSelectedItem();
        if (tipoSeleccionado != null) {
            int idTipoProtocolo = tipoSeleccionado.getId_tipo();
            // Llamar al método para obtener los protocolos por fecha y tipo
            protocolos = tiproData.obtenerProtocolosConObraSocialPorFechaYTipo(fechaDesde, fechaHasta, idTipoProtocolo);
        } else {
            JOptionPane.showMessageDialog(this, "Por favor seleccione un tipo de protocolo", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Limpiar la tabla antes de agregar los nuevos resultados
        DefaultTableModel model = (DefaultTableModel) tableInformes.getModel();
        model.setRowCount(0);

        // Agregar los datos a la tabla
        for (Protocolo protocolo : protocolos) {
//    ObraSocial obraSocial = obData.buscarObraSocialPorId(protocolo.getIdProtocolo()); // Ajusta según tu lógica
    Paciente paciente = pacienteData.buscarPacientePorId(protocolo.getIdPaciente()); // Ajusta según tu lógica

    String nombrePaciente = paciente != null ? paciente.getApellido() + ", " + paciente.getNombre() : "N/A"; // Nombre completo del paciente

    model.addRow(new Object[]{
        protocolo.getIdProtocolo(),
//        obraSocial != null ? obraSocial.getNombre() : "N/A",  // Nombre de la obra social
        nombrePaciente,  // Nombre completo del paciente
        protocolo.getNumero_protocolo(),  // Número de protocolo
        protocolo.getFechaEntrada(),  // Fecha de solicitud
        protocolo.getFechaSalida(),  // Fecha de solicitud
        protocolo.getMonto(),  // Monto
        protocolo.getEstado() , // Estado del protocolo
    });
}


        // Sumar los montos y mostrar en txtResultado
        double totalMonto = 0;
        for (int i = 0; i < model.getRowCount(); i++) {
            totalMonto += (double) model.getValueAt(i, 5); // Suma los valores de la columna "Monto"
        }
        txtSuma.setText(String.valueOf(totalMonto));

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al realizar la búsqueda: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Protocolo_por_tipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Protocolo_por_tipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Protocolo_por_tipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Protocolo_por_tipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Protocolo_por_tipo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<tipoProtocolo> cbxTipo;
    private com.toedter.calendar.JDateChooser dcDesde;
    private com.toedter.calendar.JDateChooser dcHasta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableInformes;
    private javax.swing.JTextField txtSuma;
    // End of variables declaration//GEN-END:variables

 private void llenarComboBoxtip() {
    List<tipoProtocolo> tipoP = tiproData.listarTipoProtocolo();
    DefaultComboBoxModel<tipoProtocolo> model = new DefaultComboBoxModel<>();

//    // Agregar un elemento vacío al inicio
//    model.addElement(null);

    for (tipoProtocolo tipoprotocolo : tipoP) {
        model.addElement(tipoprotocolo);
    }

    cbxTipo.setModel(model);

    // Configurar el renderizado del JComboBox para mostrar apellido, nombre
    cbxTipo.setRenderer(new javax.swing.DefaultListCellRenderer() {
        @Override
        public java.awt.Component getListCellRendererComponent(
                javax.swing.JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            if (value instanceof tipoProtocolo) {
                tipoProtocolo tipoProtocolo = (tipoProtocolo) value;
                value = tipoProtocolo.getEstudio()+ " - " + tipoProtocolo.getId_tipo();
            } else if (value == null) {
                value = ""; // Mostrar una cadena vacía para el elemento vacío
            }
            return super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
        }
    });
}

}
