
package vistas;

import Entidades.Paciente;
import Entidades.Protocolo;
import Metodos.Conexion;
import Metodos.pacienteData;
import Metodos.protocoloData;
import java.awt.Desktop;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.PrintJob;
import java.awt.Taskbar;
import java.awt.Toolkit;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URLEncoder;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import net.glxn.qrgen.QRCode;

/**
 *
 * @author MeD
 */
public class GenerarQR extends javax.swing.JFrame {
private Conexion con;
 private protocoloData protocoloData;
  private pacienteData pacienteData;
    public GenerarQR() {
        initComponents();
        con = new Conexion();
         
          protocoloData = new protocoloData(); 
          pacienteData = new pacienteData();
          llenarComboBoxRazonSocial();
          agregarActionListenerComboBox();
          agregarActionListenerComboBoxProtocolos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnGenerarQr = new javax.swing.JButton();
        txtCrearQr = new javax.swing.JTextField();
        cbxRazonSocial = new javax.swing.JComboBox<>();
        cbxProtocolos = new javax.swing.JComboBox<>();
        btnImprimirQR = new javax.swing.JButton();
        btnEnviarQrW = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        txtDni = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        panelImprimir = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator1 = new javax.swing.JSeparator();
        txtFechaEntrada = new javax.swing.JTextField();
        txtFechaSalida = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNprotocolo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMensaje = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        txtQr = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnGenerarQr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos-chicos/descarga-en-la-nube.png"))); // NOI18N
        btnGenerarQr.setText("Generar QR");
        btnGenerarQr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarQrActionPerformed(evt);
            }
        });
        jPanel1.add(btnGenerarQr, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 330, 40));
        jPanel1.add(txtCrearQr, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 330, 40));

        jPanel1.add(cbxRazonSocial, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 330, 40));

        jPanel1.add(cbxProtocolos, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 330, 40));

        btnImprimirQR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos-chicos/impresora.png"))); // NOI18N
        btnImprimirQR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirQRActionPerformed(evt);
            }
        });
        jPanel1.add(btnImprimirQR, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 160, 70));

        btnEnviarQrW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos-chicos/whatsapp.png"))); // NOI18N
        btnEnviarQrW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarQrWActionPerformed(evt);
            }
        });
        jPanel1.add(btnEnviarQrW, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 310, 160, 70));

        jLabel5.setText("Telefono");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, -1, -1));

        txtTelefono.setBorder(null);
        jPanel1.add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, 210, 30));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, 210, 10));
        jPanel1.add(txtDni, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 80, 110, 20));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos-chicos/cerrar-sesion.png"))); // NOI18N
        jButton1.setText("SALIR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 420, -1, -1));

        panelImprimir.setBackground(new java.awt.Color(255, 255, 255));

        txtFechaEntrada.setBorder(null);
        txtFechaEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaEntradaActionPerformed(evt);
            }
        });

        txtFechaSalida.setBorder(null);

        jLabel3.setText("Fecha Salida");

        jLabel2.setText("Fecha Entrada");

        jLabel4.setText("Nº Pro:");

        txtMensaje.setColumns(20);
        txtMensaje.setRows(5);
        txtMensaje.setText("    \n      ¡Hola! Somos MoviLab :) \n      Con este QR vas a poder visualizar \n      tus resultados.");
        txtMensaje.setWrapStyleWord(true);
        txtMensaje.setBorder(null);
        txtMensaje.setCaretColor(new java.awt.Color(51, 51, 51));
        txtMensaje.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        txtMensaje.setMargin(new java.awt.Insets(12, 16, 12, 16));
        txtMensaje.setSelectionColor(new java.awt.Color(102, 102, 102));
        jScrollPane1.setViewportView(txtMensaje);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("QR");

        javax.swing.GroupLayout panelImprimirLayout = new javax.swing.GroupLayout(panelImprimir);
        panelImprimir.setLayout(panelImprimirLayout);
        panelImprimirLayout.setHorizontalGroup(
            panelImprimirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelImprimirLayout.createSequentialGroup()
                .addContainerGap(321, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(194, 194, 194))
            .addGroup(panelImprimirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelImprimirLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(panelImprimirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelImprimirLayout.createSequentialGroup()
                            .addGap(80, 80, 80)
                            .addComponent(jLabel1))
                        .addComponent(txtQr, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(60, 60, 60)
                    .addGroup(panelImprimirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(txtFechaEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtFechaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(panelImprimirLayout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(jLabel4)
                            .addGap(12, 12, 12)
                            .addComponent(txtNprotocolo, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        panelImprimirLayout.setVerticalGroup(
            panelImprimirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImprimirLayout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(jLabel3)
                .addContainerGap(179, Short.MAX_VALUE))
            .addGroup(panelImprimirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelImprimirLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(panelImprimirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelImprimirLayout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(12, 12, 12)
                            .addComponent(txtQr, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelImprimirLayout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addComponent(jLabel2)
                            .addGap(4, 4, 4)
                            .addComponent(txtFechaEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, 0)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addComponent(txtFechaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, 0)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addGroup(panelImprimirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(txtNprotocolo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(10, 10, 10)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel1.add(panelImprimir, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 110, 580, 290));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 153, 255));
        jLabel8.setText("GENERAR QR");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 40, -1, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondos/marquesina-1_B.jpg"))); // NOI18N
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, 100));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtFechaEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaEntradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaEntradaActionPerformed

    private void btnGenerarQrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarQrActionPerformed
      CrearQR();
    }//GEN-LAST:event_btnGenerarQrActionPerformed

    private void btnEnviarQrWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarQrWActionPerformed
      String telefonoCliente = txtTelefono.getText();
    String mensajePredeterminado = txtMensaje.getText();
    String dni = txtDni.getText();
    String fechaSalida = txtFechaSalida.getText();
        
    Protocolo protocoloSeleccionado = (Protocolo) cbxProtocolos.getSelectedItem();

    if (telefonoCliente == null || telefonoCliente.trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "El número de teléfono no puede estar vacío.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (mensajePredeterminado == null || mensajePredeterminado.trim().isEmpty()) {
        mensajePredeterminado = "¡Hola! Somos MoviLab :) | Con este QR vas a poder visualizar los resultados. A partir de la fecha : " + fechaSalida;
    }

    if (protocoloSeleccionado == null) {
        JOptionPane.showMessageDialog(this, "Debe seleccionar un protocolo", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    String numeroProtocolo = protocoloSeleccionado.getNumero_protocolo();

    try {
        // Codificar el mensaje predeterminado
        String detalleMensajeCodificado = URLEncoder.encode(mensajePredeterminado, "UTF-8");

        // Formar el enlace de WhatsApp con el número de teléfono y el mensaje
        String enlaceWhatsApp = "https://wa.me/" + telefonoCliente + "?text=" + detalleMensajeCodificado;

        // Abrir el enlace en el navegador predeterminado
        Desktop.getDesktop().browse(new URI(enlaceWhatsApp));
    } catch (IOException | URISyntaxException e) {
        e.printStackTrace();
    }

    // Ruta de la imagen
    String rutaImagen = "C:/Pacientes/" + dni + "/" + numeroProtocolo + ".png";

    // Intentar abrir la carpeta que contiene la imagen
    File archivoImagen = new File(rutaImagen);
    File carpetaImagen = archivoImagen.getParentFile(); // Obtener la carpeta contenedora
    try {
        if (carpetaImagen.exists()) {
            Desktop.getDesktop().open(carpetaImagen);
        } else {
            JOptionPane.showMessageDialog(this, "La carpeta que contiene la imagen no existe.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "No se pudo abrir la carpeta de la imagen: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnEnviarQrWActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnImprimirQRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirQRActionPerformed
             Toolkit tk = panelImprimir.getToolkit();
        PrintJob pj = tk.getPrintJob(this, null, null);
        Graphics g = pj.getGraphics();
        panelImprimir.print(g);
        g.dispose();
        pj.end();
    }//GEN-LAST:event_btnImprimirQRActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GenerarQR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GenerarQR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GenerarQR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GenerarQR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GenerarQR().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnviarQrW;
    private javax.swing.JButton btnGenerarQr;
    private javax.swing.JButton btnImprimirQR;
    private javax.swing.JComboBox<Protocolo> cbxProtocolos;
    private javax.swing.JComboBox<Paciente> cbxRazonSocial;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JPanel panelImprimir;
    private javax.swing.JTextField txtCrearQr;
    private javax.swing.JLabel txtDni;
    private javax.swing.JTextField txtFechaEntrada;
    private javax.swing.JTextField txtFechaSalida;
    private javax.swing.JTextArea txtMensaje;
    private javax.swing.JLabel txtNprotocolo;
    private javax.swing.JLabel txtQr;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables

 private void llenarComboBoxRazonSocial() {
    List<Paciente> pacientes = pacienteData.obtenerTodosLosPacientes();
    DefaultComboBoxModel<Paciente> model = new DefaultComboBoxModel<>();

    // Agregar un elemento vacío al inicio
    model.addElement(null);

    for (Paciente paciente : pacientes) {
        model.addElement(paciente);
    }

    cbxRazonSocial.setModel(model);

    // Configurar el renderizado del JComboBox para mostrar apellido, nombre
    cbxRazonSocial.setRenderer(new javax.swing.DefaultListCellRenderer() {
        @Override
        public java.awt.Component getListCellRendererComponent(
                javax.swing.JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            if (value instanceof Paciente) {
                Paciente paciente = (Paciente) value;
                value = paciente.getApellido() + ", " + paciente.getNombre()+ ", " + paciente.getIdPaciente();
            } else if (value == null) {
                value = ""; // Mostrar una cadena vacía para el elemento vacío
            }
            return super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
        }
    });
}
 
 private void agregarActionListenerComboBox() {
    cbxRazonSocial.addActionListener(new java.awt.event.ActionListener() {
        @Override
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            Paciente pacienteSeleccionado = (Paciente) cbxRazonSocial.getSelectedItem();
            if (pacienteSeleccionado != null) {
                txtTelefono.setText(pacienteSeleccionado.getTelefono());
                txtDni.setText(pacienteSeleccionado.getDni());
                // Llenar cbxProtocolos con los protocolos del paciente seleccionado
                List<Protocolo> protocolos = protocoloData.buscarProtocolosPorIdPaciente(pacienteSeleccionado.getIdPaciente());
                DefaultComboBoxModel<Protocolo> protocoloModel = new DefaultComboBoxModel<>();
                
                // Agregar un elemento vacío al inicio
                protocoloModel.addElement(null);

                for (Protocolo protocolo : protocolos) {
                    protocoloModel.addElement(protocolo);
                }
                
                cbxProtocolos.setModel(protocoloModel);

                // Configurar el renderizado del JComboBox para mostrar el número de protocolo
                cbxProtocolos.setRenderer(new javax.swing.DefaultListCellRenderer() {
                    @Override
                    public java.awt.Component getListCellRendererComponent(
                            javax.swing.JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                        if (value instanceof Protocolo) {
                            Protocolo protocolo = (Protocolo) value;
                            value = protocolo.getNumero_protocolo();
                        } else if (value == null) {
                            value = ""; // Mostrar una cadena vacía para el elemento vacío
                        }
                        return super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                    }
                });
                
            } else {
                txtTelefono.setText("");
                cbxProtocolos.setModel(new DefaultComboBoxModel<>()); // Limpiar cbxProtocolos
            }
        }
    });
}
 
 private void agregarActionListenerComboBoxProtocolos() {
    cbxProtocolos.addActionListener(new java.awt.event.ActionListener() {
        @Override
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            Protocolo protocoloSeleccionado = (Protocolo) cbxProtocolos.getSelectedItem();
            if (protocoloSeleccionado != null) {
                txtFechaEntrada.setText(protocoloSeleccionado.getFechaEntrada().toString());
                txtFechaSalida.setText(protocoloSeleccionado.getFechaSalida().toString());
                txtNprotocolo.setText(protocoloSeleccionado.getNumero_protocolo().toString());
            } else {
                txtFechaEntrada.setText("");
                txtFechaSalida.setText("");
                txtNprotocolo.setText("");
                
            }
        }
    });
}
 

private void CrearQR() {
    String dni = txtDni.getText();
    String link = txtCrearQr.getText();
    
    Protocolo protocoloSeleccionado = (Protocolo) cbxProtocolos.getSelectedItem();

    if (link == null || link.isEmpty()) {
        JOptionPane.showMessageDialog(this, "DNI no puede estar vacío", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (protocoloSeleccionado == null) {
        JOptionPane.showMessageDialog(this, "Debe seleccionar un protocolo", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    String nprotocolo = protocoloSeleccionado.getNumero_protocolo();

    ByteArrayOutputStream outQr;
    try {
        outQr = QRCode.from(link).withSize(190, 190).stream();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al generar el código QR: " + e.getMessage(), "Cod. Error 25", JOptionPane.ERROR_MESSAGE);
        return;
    }

    ByteArrayInputStream inQR = new ByteArrayInputStream(outQr.toByteArray());

    BufferedImage bf = null;

    try {
        bf = ImageIO.read(inQR);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al leer el flujo del código QR: " + e.getMessage(), "Cod. Error 25", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Crear la carpeta si no existe
    String folderPath = "C:/Pacientes/" + dni + "/" + nprotocolo;
    File folder = new File(folderPath);
    if (!folder.exists()) {
        folder.mkdirs();
    }

    // Guardar la imagen en la carpeta creada con el nombre del DNI
    File f = new File(folderPath + "/" + nprotocolo + ".png");
    try {
        ImageIO.write(bf, "png", f);
        Thread.sleep(2000);

        ImageIcon icono = new ImageIcon(f.getAbsolutePath());
        txtQr.setIcon(icono);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al guardar el archivo del código QR: " + e.getMessage(), "Cod. Error 26", JOptionPane.ERROR_MESSAGE);
    }
}


}
