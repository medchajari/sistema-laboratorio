
package vistas;

import Entidades.Profesionales;
import javax.swing.JOptionPane;
import Entidades.tipoProtocolo;
import Metodos.TipoProtocoloData;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
/**
 *
 * @author MeD
 */
public class TipoProtocolo extends javax.swing.JFrame {
 private TipoProtocoloData tiproData;
    public TipoProtocolo() {
        initComponents();
        tiproData = new TipoProtocoloData();
        llenarComboBoxtip();
        agregarActionListenerComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        txtTipo = new javax.swing.JTextField();
        txtProfesional = new javax.swing.JTextField();
        btnLimpiar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        cbxTipo = new javax.swing.JComboBox<>();
        btnSalir = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Tipo de Protocolo");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        jLabel3.setText("Profesional");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 170, 20));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 170, 10));

        txtTipo.setBackground(new java.awt.Color(249, 249, 249));
        txtTipo.setBorder(null);
        jPanel1.add(txtTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 170, 30));

        txtProfesional.setBackground(new java.awt.Color(249, 249, 249));
        txtProfesional.setBorder(null);
        jPanel1.add(txtProfesional, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 170, 30));

        btnLimpiar.setText("LIMPIAR");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        jPanel1.add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, 180, 40));

        btnModificar.setText("MODIFICAR");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jPanel1.add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 300, 180, 40));

        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 150, 180, 40));

        jButton4.setText("jButton1");
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 150, 180, 40));

        jPanel1.add(cbxTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 250, 180, 40));

        btnSalir.setText("SALIR");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 170, 40));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 153, 255));
        jLabel4.setText("Tipos de Estudios");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 40, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondos/marquesina-1_B.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 680, 110));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        
            String tipo = txtTipo.getText();
            String profesional = txtProfesional.getText();         
            
            // Validar que los campos obligatorios no estén vacíos
            if (tipo.isEmpty() || profesional.isEmpty()  ) {
                // Mostrar un mensaje de error o realizar la lógica necesaria en caso de campos vacíos
                // Por ejemplo, mostrar una ventana de diálogo de error
                JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                // Llamar al método para agregar el proveedor en la base de datos
                tiproData.agregarTipoProtocolo(tipo,profesional);
               
                // Limpia los campos de entrada después de agregar el proveedor (opcional)
                txtTipo.setText("");                
                txtProfesional.setText("");
                  llenarComboBoxtip();
                
            }
        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
       txtTipo.setText("");
                txtProfesional.setText("");
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
         tipoProtocolo tippro = (tipoProtocolo) cbxTipo.getSelectedItem();
            if (tippro == null) {
                JOptionPane.showMessageDialog(this, "Por favor, seleccione una obra social.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int id_tipo = tippro.getId_tipo();
            String estudio = txtTipo.getText();
            String profesional = txtProfesional.getText();

        
            if (estudio.isEmpty() || profesional.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
               
                tiproData.actualizarTipoProtocolo(id_tipo, estudio, profesional);
                 
                txtTipo.setText("");
                txtProfesional.setText("");
                llenarComboBoxtip();
            }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
     dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TipoProtocolo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TipoProtocolo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TipoProtocolo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TipoProtocolo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TipoProtocolo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<tipoProtocolo> cbxTipo;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField txtProfesional;
    private javax.swing.JTextField txtTipo;
    // End of variables declaration//GEN-END:variables

private void llenarComboBoxtip() {
    List<tipoProtocolo> tipoP = tiproData.listarTipoProtocolo();
    DefaultComboBoxModel<tipoProtocolo> model = new DefaultComboBoxModel<>();

    // Agregar un elemento vacío al inicio
    model.addElement(null);

    for (tipoProtocolo tipoprotocolo : tipoP) {
        model.addElement(tipoprotocolo);
    }

    cbxTipo.setModel(model);

    // Configurar el renderizado del JComboBox para mostrar apellido, nombre
    cbxTipo.setRenderer(new javax.swing.DefaultListCellRenderer() {
        @Override
        public java.awt.Component getListCellRendererComponent(
                javax.swing.JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            if (value instanceof tipoProtocolo) {
                tipoProtocolo tipoProtocolo = (tipoProtocolo) value;
                value = tipoProtocolo.getEstudio();
            } else if (value == null) {
                value = ""; // Mostrar una cadena vacía para el elemento vacío
            }
            return super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
        }
    });
}
  

  private void agregarActionListenerComboBox() {
    cbxTipo.addActionListener(new java.awt.event.ActionListener() {
        @Override
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            tipoProtocolo tipoSeleccionado = (tipoProtocolo) cbxTipo.getSelectedItem();
            if (tipoSeleccionado != null) {
                txtTipo.setText(tipoSeleccionado.getEstudio());
                 txtProfesional.setText(tipoSeleccionado.getProfesional());
            } else {
                txtTipo.setText("");
                txtProfesional.setText("");
            }
        }
    });
}
  
  
}
